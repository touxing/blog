const a=JSON.parse('{"key":"v-088a0e67","path":"/posts/algo/","title":"算法","lang":"zh-CN","frontmatter":{"title":"算法","date":"2020-03-05T00:00:00.000Z","icon":"structure","category":["算法"],"tag":["算法","algo"],"dir":{"order":4},"description":"算法 算法是内功，唯有内功深厚，才能称霸“江湖” 实力派 11排序 常见排序算法 基于比较的低效算法：选择排序、插入排序、冒泡排序。时间复杂度为 O(n2) 基于比较的高效算法：归并排序、快速排序、堆排序。时间复杂度为 O(nlogn) 基于数值划分的高效算法：计数排序、计数排序、桶排序。时间复杂度为 O(n)","head":[["meta",{"property":"og:url","content":"https://touxing.github.io/blog/blog/posts/algo/"}],["meta",{"property":"og:site_name","content":"磨刀霍霍向猪羊"}],["meta",{"property":"og:title","content":"算法"}],["meta",{"property":"og:description","content":"算法 算法是内功，唯有内功深厚，才能称霸“江湖” 实力派 11排序 常见排序算法 基于比较的低效算法：选择排序、插入排序、冒泡排序。时间复杂度为 O(n2) 基于比较的高效算法：归并排序、快速排序、堆排序。时间复杂度为 O(nlogn) 基于数值划分的高效算法：计数排序、计数排序、桶排序。时间复杂度为 O(n)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-03T09:44:23.000Z"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"algo"}],["meta",{"property":"article:published_time","content":"2020-03-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-03T09:44:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-03-05T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-03T09:44:23.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1678882168000,"updatedTime":1685785463000,"contributors":[{"name":"hotsuitor","email":"hotsuitor@qq.com","commits":4}]},"readingTime":{"minutes":1,"words":301},"filePathRelative":"posts/algo/README.md","localizedDate":"2020年3月5日","excerpt":"<h1> 算法</h1>\\n<blockquote>\\n<p>算法是内功，唯有内功深厚，才能称霸“江湖” 实力派</p>\\n</blockquote>\\n<p><a href=\\"/blog/posts/algo/11%E6%8E%92%E5%BA%8F/\\" target=\\"blank\\">11排序</a>\\n常见排序算法</p>\\n<ol>\\n<li>基于比较的低效算法：选择排序、插入排序、冒泡排序。时间复杂度为 <span class=\\"katex\\"><span class=\\"katex-mathml\\"></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1.0641em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord\\"><span class=\\"mord mathnormal\\">n</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.8141em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\">2</span></span></span></span></span></span></span></span><span class=\\"mclose\\">)</span></span></span></span></li>\\n<li>基于比较的高效算法：归并排序、快速排序、堆排序。时间复杂度为 <span class=\\"katex\\"><span class=\\"katex-mathml\\"></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\">n</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.01968em;\\">l</span><span class=\\"mord mathnormal\\">o</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.03588em;\\">g</span><span class=\\"mord mathnormal\\">n</span><span class=\\"mclose\\">)</span></span></span></span></li>\\n<li>基于数值划分的高效算法：计数排序、计数排序、桶排序。时间复杂度为 <span class=\\"katex\\"><span class=\\"katex-mathml\\"></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\">n</span><span class=\\"mclose\\">)</span></span></span></span></li>\\n</ol>","autoDesc":true}');export{a as data};
