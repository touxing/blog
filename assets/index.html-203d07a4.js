const n=JSON.parse('{"key":"v-5745c435","path":"/zh/posts/javascript/17%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/","title":"桥接模式","lang":"zh-CN","frontmatter":{"date":"2020-11-23T00:00:00.000Z","category":["设计模式"],"tag":["桥接模式"],"description":"桥接模式 3 ⭐ 桥接模式，将抽象部分与它的实现部分分离，使他们都可以独立地变化 使用组合关系代替继承关系，降低抽象和实现两个可变纬度的耦合度 /* * @Author: HotSuitor * @Date: 2020-03-16 16:58:00 * @LastEditors: hs * @LastEditTime: 2020-04-15 15:24:01 * @Description: hotsuitor@qq.com */ /** * 桥接模式，将抽象部分与它的实现部分分离，使他们都可以独立地变化 * 使用组合关系代替继承关系，降低抽象和实现两个可变纬度的耦合度 */ // 用桥接模式 实现工厂生产洗衣机的不同型号 // 组装洗衣机 function Washer(motorType, rollerType, transducerType) { this.motor = new Motor(motorType); this.roller = new Roller(rollerType); this.transducer = new Transducer(transducerType); } // 洗衣机工作 Washer.prototype.work = function() { this.motor.run(); this.roller.run(); this.transducer.run(); }; // 电机 function Motor(type) { this.motorType = type + \\"电机\\"; } Motor.prototype.run = function() { console.log(this.motorType + \\"开始工作\\"); }; // 滚筒 function Roller(type) { this.rollerType = type + \\"滚筒\\"; } Roller.prototype.run = function() { console.log(this.rollerType + \\"开始工作\\"); }; // 变频器 function Transducer(type) { this.transducerType = type + \\"变频器\\"; } Transducer.prototype.run = function() { console.log(this.transducerType + \\"开始工作\\"); }; // 新建洗衣机 var washerA = new Washer(\\"小功率\\", \\"直立\\", \\"小功率\\"); washerA.work(); var washerB = new Washer(\\"中功率\\", \\"滚筒\\", \\"中功率\\"); washerB.work(); // es6实现 class Washer2 { constructor(motorType, rollerType, transducerType) { this.motor = new Motor2(motorType); this.roller = new Roller2(rollerType); this.transducer = new Transducer2(transducerType); } work() { this.motor.run(); this.roller.run(); this.transducer.run(); } } class Motor2 { constructor(motorType) { this.motorType = motorType + \\"电机\\"; } run() { console.log(this.motorType + \\"开始工作\\"); } } class Roller2 { constructor(rollerType) { this.rollerType = rollerType + \\"滚筒\\"; } run() { console.log(this.rollerType + \\"开始工作\\"); } } class Transducer2 { constructor(transducerType) { this.transducerType = transducerType + \\"变频器\\"; } run() { console.log(this.transducerType + \\"开始工作\\"); } } let washerA1 = new Washer2(\\"大功率\\", \\"横滚\\", \\"中等变频\\"); washerA1.work();","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/zh/posts/javascript/17%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/"}],["meta",{"property":"og:site_name","content":"磨刀霍霍向猪羊"}],["meta",{"property":"og:title","content":"桥接模式"}],["meta",{"property":"og:description","content":"桥接模式 3 ⭐ 桥接模式，将抽象部分与它的实现部分分离，使他们都可以独立地变化 使用组合关系代替继承关系，降低抽象和实现两个可变纬度的耦合度 /* * @Author: HotSuitor * @Date: 2020-03-16 16:58:00 * @LastEditors: hs * @LastEditTime: 2020-04-15 15:24:01 * @Description: hotsuitor@qq.com */ /** * 桥接模式，将抽象部分与它的实现部分分离，使他们都可以独立地变化 * 使用组合关系代替继承关系，降低抽象和实现两个可变纬度的耦合度 */ // 用桥接模式 实现工厂生产洗衣机的不同型号 // 组装洗衣机 function Washer(motorType, rollerType, transducerType) { this.motor = new Motor(motorType); this.roller = new Roller(rollerType); this.transducer = new Transducer(transducerType); } // 洗衣机工作 Washer.prototype.work = function() { this.motor.run(); this.roller.run(); this.transducer.run(); }; // 电机 function Motor(type) { this.motorType = type + \\"电机\\"; } Motor.prototype.run = function() { console.log(this.motorType + \\"开始工作\\"); }; // 滚筒 function Roller(type) { this.rollerType = type + \\"滚筒\\"; } Roller.prototype.run = function() { console.log(this.rollerType + \\"开始工作\\"); }; // 变频器 function Transducer(type) { this.transducerType = type + \\"变频器\\"; } Transducer.prototype.run = function() { console.log(this.transducerType + \\"开始工作\\"); }; // 新建洗衣机 var washerA = new Washer(\\"小功率\\", \\"直立\\", \\"小功率\\"); washerA.work(); var washerB = new Washer(\\"中功率\\", \\"滚筒\\", \\"中功率\\"); washerB.work(); // es6实现 class Washer2 { constructor(motorType, rollerType, transducerType) { this.motor = new Motor2(motorType); this.roller = new Roller2(rollerType); this.transducer = new Transducer2(transducerType); } work() { this.motor.run(); this.roller.run(); this.transducer.run(); } } class Motor2 { constructor(motorType) { this.motorType = motorType + \\"电机\\"; } run() { console.log(this.motorType + \\"开始工作\\"); } } class Roller2 { constructor(rollerType) { this.rollerType = rollerType + \\"滚筒\\"; } run() { console.log(this.rollerType + \\"开始工作\\"); } } class Transducer2 { constructor(transducerType) { this.transducerType = transducerType + \\"变频器\\"; } run() { console.log(this.transducerType + \\"开始工作\\"); } } let washerA1 = new Washer2(\\"大功率\\", \\"横滚\\", \\"中等变频\\"); washerA1.work();"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T04:36:56.000Z"}],["meta",{"property":"article:tag","content":"桥接模式"}],["meta",{"property":"article:published_time","content":"2020-11-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T04:36:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"桥接模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-11-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T04:36:56.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1678855016000,"updatedTime":1678855016000,"contributors":[{"name":"hotsuitor","email":"hotsuitor@qq.com","commits":1}]},"readingTime":{"minutes":0.27,"words":81},"filePathRelative":"zh/posts/javascript/17桥接模式/README.md","localizedDate":"2020年11月23日","excerpt":"<h1> 桥接模式</h1>\\n<p>3 ⭐</p>\\n<blockquote>\\n<p>桥接模式，将抽象部分与它的实现部分分离，使他们都可以独立地变化\\n使用组合关系代替继承关系，降低抽象和实现两个可变纬度的耦合度</p>\\n</blockquote>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">/*\\n * @Author: HotSuitor\\n * @Date: 2020-03-16 16:58:00\\n * @LastEditors: hs\\n * @LastEditTime: 2020-04-15 15:24:01\\n * @Description: hotsuitor@qq.com\\n */</span>\\n<span class=\\"token doc-comment comment\\">/**\\n * 桥接模式，将抽象部分与它的实现部分分离，使他们都可以独立地变化\\n * 使用组合关系代替继承关系，降低抽象和实现两个可变纬度的耦合度\\n */</span>\\n\\n<span class=\\"token comment\\">// 用桥接模式 实现工厂生产洗衣机的不同型号</span>\\n\\n<span class=\\"token comment\\">// 组装洗衣机</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">Washer</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">motorType<span class=\\"token punctuation\\">,</span> rollerType<span class=\\"token punctuation\\">,</span> transducerType</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>motor <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Motor</span><span class=\\"token punctuation\\">(</span>motorType<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>roller <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Roller</span><span class=\\"token punctuation\\">(</span>rollerType<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>transducer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Transducer</span><span class=\\"token punctuation\\">(</span>transducerType<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 洗衣机工作</span>\\n<span class=\\"token class-name\\">Washer</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">work</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>motor<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>roller<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>transducer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 电机</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">Motor</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">type</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>motorType <span class=\\"token operator\\">=</span> type <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"电机\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token class-name\\">Motor</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">run</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>motorType <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"开始工作\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 滚筒</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">Roller</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">type</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>rollerType <span class=\\"token operator\\">=</span> type <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"滚筒\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token class-name\\">Roller</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">run</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>rollerType <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"开始工作\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 变频器</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">Transducer</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">type</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>transducerType <span class=\\"token operator\\">=</span> type <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"变频器\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token class-name\\">Transducer</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">run</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>transducerType <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"开始工作\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 新建洗衣机</span>\\n<span class=\\"token keyword\\">var</span> washerA <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Washer</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"小功率\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"直立\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"小功率\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nwasherA<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">work</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">var</span> washerB <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Washer</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"中功率\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"滚筒\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"中功率\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nwasherB<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">work</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// es6实现</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Washer2</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">motorType<span class=\\"token punctuation\\">,</span> rollerType<span class=\\"token punctuation\\">,</span> transducerType</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>motor <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Motor2</span><span class=\\"token punctuation\\">(</span>motorType<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>roller <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Roller2</span><span class=\\"token punctuation\\">(</span>rollerType<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>transducer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Transducer2</span><span class=\\"token punctuation\\">(</span>transducerType<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">work</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>motor<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>roller<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>transducer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Motor2</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">motorType</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>motorType <span class=\\"token operator\\">=</span> motorType <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"电机\\"</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>motorType <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"开始工作\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Roller2</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">rollerType</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>rollerType <span class=\\"token operator\\">=</span> rollerType <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"滚筒\\"</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>rollerType <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"开始工作\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Transducer2</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">transducerType</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>transducerType <span class=\\"token operator\\">=</span> transducerType <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"变频器\\"</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>transducerType <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"开始工作\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">let</span> washerA1 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Washer2</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"大功率\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"横滚\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"中等变频\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nwasherA1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">work</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
