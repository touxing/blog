import{_ as n,X as i,Y as t,a3 as e,Z as s,$ as o}from"./framework-127c059f.js";const l="/blog/assets/image-20200310145812935-ed6d3621.png",c="/blog/assets/image-20200310150001047-72786b48.png",a="/blog/assets/image-20200310150911760-82f14c44.png",_={},d=s("h2",{id:"为什么redis一定更要用跳表来实现有序集合",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#为什么redis一定更要用跳表来实现有序集合","aria-hidden":"true"},"#"),o(" 为什么Redis一定更要用跳表来实现有序集合？")],-1),g=s("p",null,"跳表(Skip List)是一种给链表加索引的顺序表，支持类似“二分”查找算法",-1),p=s("p",null,"Redis中的有序集合就是用跳表来实现的。",-1),r=s("p",null,"对于单链表来说，即使链表是有序的，如果想要查找某个元素，只能遍历链。 这样查找效率很低，时间复杂度O(n)",-1),h=s("figure",null,[s("img",{src:l,alt:"img1",tabindex:"0",loading:"lazy"}),s("figcaption",null,"img1")],-1),u=s("p",null,"那么怎么提高效率呢？给链表建索引，两个结点提取一个结点到上一级，把抽出来的那一级叫作索引或索引层如下图",-1),m=s("figure",null,[s("img",{src:c,alt:"img2",tabindex:"0",loading:"lazy"}),s("figcaption",null,"img2")],-1),f=s("p",null,"如果要找元素16，先从索引二分查找，小于17节点，取13节点，通过索引层结点的down指针，下降到原始链表这一层，继续遍历。只需要遍历2个节点，找到16。",-1),b=s("p",null,"数量不大建立索引提升效率不够明显，如果查找的链表数量很大，多级索引提高查找效率就很明显了。一个64节点的链表，按上面思路建立五级索引。",-1),x=s("figure",null,[s("img",{src:a,alt:"img3",tabindex:"0",loading:"lazy"}),s("figcaption",null,"img3")],-1),y=s("p",null,"没有建索引时，查找62需要遍历62次，建立索引后，只需要遍历11次。链表长度n越大，查找效率提升越明显。",-1),z=s("p",null,"这里的算法思想是空间换时间。",-1);function v(k,B){return i(),t("div",null,[d,g,p,r,h,e(" ![20211210190738](https://piclive.oss-cn-shenzhen.aliyuncs.com/blog/pictures/20211210190738.png) "),u,m,e(" ![image-20200310150001047](https://piclive.oss-cn-shenzhen.aliyuncs.com/blog/pictures/image-20200310150001047.png) "),f,b,x,e(" ![20211210192155](https://piclive.oss-cn-shenzhen.aliyuncs.com/blog/pictures/20211210192155.png) "),y,z])}const V=n(_,[["render",v],["__file","index.html.vue"]]);export{V as default};
