import{_ as a,X as s,Y as e,a0 as n}from"./framework-127c059f.js";const i={},o=n(`<h1 id="怎样才算优秀的编码-个人的一点思考" tabindex="-1"><a class="header-anchor" href="#怎样才算优秀的编码-个人的一点思考" aria-hidden="true">#</a> 怎样才算优秀的编码，个人的一点思考</h1><h2 id="什么是优秀的编码" tabindex="-1"><a class="header-anchor" href="#什么是优秀的编码" aria-hidden="true">#</a> 什么是优秀的编码</h2><p>说到优秀的编码首先离不开编码规范。</p><p>编码习惯是一个争议比较大的问题，但是优秀的编码习惯大部分是公认的。 一些差异，比如空格是2个还是4个，要不要写分号，这些问题不是问题。这些问题都可以通过工具，prettier 格式化，统一成一种格式即可，完全不影响每个人的编码体验。</p><h2 id="可读性-编码第一要义" tabindex="-1"><a class="header-anchor" href="#可读性-编码第一要义" aria-hidden="true">#</a> 可读性 编码第一要义</h2><p>编码是给人看的，顺便给计算机执行。 优秀的代码本身就能传达编写人的逻辑，看的人也能从中看懂逻辑。</p><h2 id="少即是多-编码第二要义" tabindex="-1"><a class="header-anchor" href="#少即是多-编码第二要义" aria-hidden="true">#</a> 少即是多 编码第二要义</h2><p>但是一些不 <code>bad code</code> 却是让人难以忍受的。举例</p><p>页面的编辑传参</p><p><code>bad code</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> isPermission <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>isPermission <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// do something</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>good code</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> isPermission <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>isPermission<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// do something</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表达式本身就能表示 <code>布尔值</code> 为什么还需要写 <code>if else true false</code> ，能少些代码就少些写代码。</p><p>没必要写一堆无用的代码，维护还困难，如果编辑页面新增了字段，还需要到列表页面新增。 特别是不同人开发的时候，明明在编辑页面新增了字段，点编辑过来死活看不到新增字段的效果。 还需要去排查问题，增加维护成本。</p><p>调试完的代码删掉，没有用的代码，基本永远都不会再用了。需要的时候再调试。 <img src="http://172.16.4.44:18080/server/index.php?s=/api/attachment/visitFile&amp;sign=a0e3dc0ec328289a1c22df72746fdcdd" alt="" loading="lazy"></p><p>todo: 未完待续</p>`,17),t=[o];function c(d,p){return s(),e("div",null,t)}const l=a(i,[["render",c],["__file","编码感悟.html.vue"]]);export{l as default};
