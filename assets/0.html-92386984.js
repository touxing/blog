const t=JSON.parse('{"key":"v-6d8bbe6a","path":"/posts/javascript/%E6%89%8B%E5%86%99%E9%A2%98/Ajax/0.html","title":"XMLHttpRequest 发送请求","lang":"zh-CN","frontmatter":{"title":"XMLHttpRequest 发送请求","date":"2023-04-20T00:00:00.000Z","category":["javascript"],"tag":["XMLHttpRequest","ajax"],"description":"XMLHttpRequest 是一个内建的浏览器对象，它允许使用 JavaScript 发送 HTTP 请求。 虽然它的名字里面有 “XML” 一词，但它可以操作任何数据，而不仅仅是 XML 格式。我们可以用它来上传/下载文件，跟踪进度等。 现如今，我们有一个更为现代的方法叫做 fetch，它的出现使得 XMLHttpRequest 在某种程度上被弃用。 在现代 Web 开发中，出于以下三种原因，我们还在使用 XMLHttpRequest： 历史原因：我们需要支持现有的使用了 XMLHttpRequest 的脚本。 我们需要兼容旧浏览器，并且不想用 polyfill（例如为了使脚本更小）。 我们需要做一些 fetch 目前无法做到的事情，例如跟踪上传进度。","head":[["meta",{"property":"og:url","content":"https://touxing.github.io/blog/blog/posts/javascript/%E6%89%8B%E5%86%99%E9%A2%98/Ajax/0.html"}],["meta",{"property":"og:site_name","content":"磨刀霍霍向猪羊"}],["meta",{"property":"og:title","content":"XMLHttpRequest 发送请求"}],["meta",{"property":"og:description","content":"XMLHttpRequest 是一个内建的浏览器对象，它允许使用 JavaScript 发送 HTTP 请求。 虽然它的名字里面有 “XML” 一词，但它可以操作任何数据，而不仅仅是 XML 格式。我们可以用它来上传/下载文件，跟踪进度等。 现如今，我们有一个更为现代的方法叫做 fetch，它的出现使得 XMLHttpRequest 在某种程度上被弃用。 在现代 Web 开发中，出于以下三种原因，我们还在使用 XMLHttpRequest： 历史原因：我们需要支持现有的使用了 XMLHttpRequest 的脚本。 我们需要兼容旧浏览器，并且不想用 polyfill（例如为了使脚本更小）。 我们需要做一些 fetch 目前无法做到的事情，例如跟踪上传进度。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-20T10:18:18.000Z"}],["meta",{"property":"article:tag","content":"XMLHttpRequest"}],["meta",{"property":"article:tag","content":"ajax"}],["meta",{"property":"article:published_time","content":"2023-04-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-20T10:18:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"XMLHttpRequest 发送请求\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-20T10:18:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1681985898000,"updatedTime":1681985898000,"contributors":[{"name":"hotsuitor","email":"hotsuitor@qq.com","commits":1}]},"readingTime":{"minutes":0.74,"words":223},"filePathRelative":"posts/javascript/手写题/Ajax/0.md","localizedDate":"2023年4月20日","excerpt":"<p>XMLHttpRequest 是一个内建的浏览器对象，它允许使用 JavaScript 发送 HTTP 请求。</p>\\n<p>虽然它的名字里面有 “XML” 一词，但它可以操作任何数据，而不仅仅是 XML 格式。我们可以用它来上传/下载文件，跟踪进度等。</p>\\n<p>现如今，我们有一个更为现代的方法叫做 fetch，它的出现使得 XMLHttpRequest 在某种程度上被弃用。</p>\\n<p>在现代 Web 开发中，出于以下三种原因，我们还在使用 XMLHttpRequest：</p>\\n<p>历史原因：我们需要支持现有的使用了 XMLHttpRequest 的脚本。\\n我们需要兼容旧浏览器，并且不想用 polyfill（例如为了使脚本更小）。\\n我们需要做一些 fetch 目前无法做到的事情，例如跟踪上传进度。</p>","autoDesc":true}');export{t as data};
