const n=JSON.parse(`{"key":"v-42d6ed1c","path":"/posts/%E9%9D%A2%E8%AF%95/1.html","title":"版本号排序","lang":"zh-CN","frontmatter":{"title":"版本号排序","date":"2023-02-25T00:00:00.000Z","icon":"note","category":["面试","js"],"tag":["面试","算法"],"description":"// 输入：['0.1.1', '2.3.3', '0.302.1', '4.2', '4.3.5', '4.3.4.5'] // 输出： [ '4.3.5', '4.3.4.5', '4.2', '2.3.3', '0.302.1', '0.1.1' ] // 实现 // 方法1.\\"大数\\"加权法 // 方法2.循环比较法 // const input = ['0.1.1', '2.3.3', '0.302.1', '4.2', '4.3.5', '4.3.4.5'] const input = ['1.0.1', '1.0.0.1', '0.2222.1'] // 1.算出每一个值的权重 // 2.用sort排序 const maxLen = Math.max(...input.map((item) =&gt; item.split('.').length)) const p = 1000 // const reducer = (prev, curr, index, arr) =&gt; prev + +curr * Math.pow(p, maxLen - 1 - index ) const reducer = (prev, curr, index, arr) =&gt; prev + Number(curr) / Math.pow(10, index ) const gen = (arr) =&gt; arr.split('.').reduce(reducer, 0) input.sort((a, b) =&gt; { return gen(b) - gen(a) }) console.log(input) // const input2 = ['0.1.1', '2.3.3', '0.302.1', '4.2', '4.3.5', '4.3.4.5'] input2.sort((a, b) =&gt; { let i = 0 let arr1 = a.split('.') let arr2 = b.split('.') while (true) { let s1 = arr1[i] let s2 = arr2[i] i++ if (typeof s1 === 'undefined' || typeof s2 === 'undefined') { return arr2.length - arr1.length } if (s1 === s2) continue return s2 - s1 } }) // console.log(input2);","head":[["meta",{"property":"og:url","content":"https://touxing.github.io/blog/blog/posts/%E9%9D%A2%E8%AF%95/1.html"}],["meta",{"property":"og:site_name","content":"磨刀霍霍向猪羊"}],["meta",{"property":"og:title","content":"版本号排序"}],["meta",{"property":"og:description","content":"// 输入：['0.1.1', '2.3.3', '0.302.1', '4.2', '4.3.5', '4.3.4.5'] // 输出： [ '4.3.5', '4.3.4.5', '4.2', '2.3.3', '0.302.1', '0.1.1' ] // 实现 // 方法1.\\"大数\\"加权法 // 方法2.循环比较法 // const input = ['0.1.1', '2.3.3', '0.302.1', '4.2', '4.3.5', '4.3.4.5'] const input = ['1.0.1', '1.0.0.1', '0.2222.1'] // 1.算出每一个值的权重 // 2.用sort排序 const maxLen = Math.max(...input.map((item) =&gt; item.split('.').length)) const p = 1000 // const reducer = (prev, curr, index, arr) =&gt; prev + +curr * Math.pow(p, maxLen - 1 - index ) const reducer = (prev, curr, index, arr) =&gt; prev + Number(curr) / Math.pow(10, index ) const gen = (arr) =&gt; arr.split('.').reduce(reducer, 0) input.sort((a, b) =&gt; { return gen(b) - gen(a) }) console.log(input) // const input2 = ['0.1.1', '2.3.3', '0.302.1', '4.2', '4.3.5', '4.3.4.5'] input2.sort((a, b) =&gt; { let i = 0 let arr1 = a.split('.') let arr2 = b.split('.') while (true) { let s1 = arr1[i] let s2 = arr2[i] i++ if (typeof s1 === 'undefined' || typeof s2 === 'undefined') { return arr2.length - arr1.length } if (s1 === s2) continue return s2 - s1 } }) // console.log(input2);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-22T10:34:30.000Z"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2023-02-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-22T10:34:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"版本号排序\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-22T10:34:30.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1679481270000,"updatedTime":1679481270000,"contributors":[{"name":"hotsuitor","email":"hotsuitor@qq.com","commits":1}]},"readingTime":{"minutes":0.1,"words":30},"filePathRelative":"posts/面试/1.md","localizedDate":"2023年2月25日","excerpt":"<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 输入：['0.1.1', '2.3.3', '0.302.1', '4.2', '4.3.5', '4.3.4.5']</span>\\n<span class=\\"token comment\\">// 输出： [ '4.3.5', '4.3.4.5', '4.2', '2.3.3', '0.302.1', '0.1.1' ]</span>\\n\\n<span class=\\"token comment\\">// 实现</span>\\n<span class=\\"token comment\\">// 方法1.\\"大数\\"加权法</span>\\n<span class=\\"token comment\\">// 方法2.循环比较法</span>\\n\\n<span class=\\"token comment\\">// const input = ['0.1.1', '2.3.3', '0.302.1', '4.2', '4.3.5', '4.3.4.5']</span>\\n<span class=\\"token keyword\\">const</span> input <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'1.0.1'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'1.0.0.1'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'0.2222.1'</span><span class=\\"token punctuation\\">]</span>\\n\\n<span class=\\"token comment\\">// 1.算出每一个值的权重</span>\\n<span class=\\"token comment\\">// 2.用sort排序</span>\\n\\n<span class=\\"token keyword\\">const</span> maxLen <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">max</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">...</span>input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">item</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> item<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">const</span> p <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1000</span>\\n<span class=\\"token comment\\">// const reducer = (prev, curr, index, arr) =&gt; prev + +curr * Math.pow(p,  maxLen - 1 - index )</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">reducer</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">prev<span class=\\"token punctuation\\">,</span> curr<span class=\\"token punctuation\\">,</span> index<span class=\\"token punctuation\\">,</span> arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> prev <span class=\\"token operator\\">+</span> <span class=\\"token function\\">Number</span><span class=\\"token punctuation\\">(</span>curr<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pow</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span>  index <span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">gen</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> arr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reduce</span><span class=\\"token punctuation\\">(</span>reducer<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n\\ninput<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sort</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">a<span class=\\"token punctuation\\">,</span> b</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">gen</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> <span class=\\"token function\\">gen</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>input<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">//</span>\\n<span class=\\"token keyword\\">const</span> input2 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'0.1.1'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'2.3.3'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'0.302.1'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'4.2'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'4.3.5'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'4.3.4.5'</span><span class=\\"token punctuation\\">]</span>\\n\\ninput2<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sort</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">a<span class=\\"token punctuation\\">,</span> b</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n  <span class=\\"token keyword\\">let</span> arr1 <span class=\\"token operator\\">=</span> a<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">let</span> arr2 <span class=\\"token operator\\">=</span> b<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.'</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> s1 <span class=\\"token operator\\">=</span> arr1<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">let</span> s2 <span class=\\"token operator\\">=</span> arr2<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n    i<span class=\\"token operator\\">++</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> s1 <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'undefined'</span> <span class=\\"token operator\\">||</span> <span class=\\"token keyword\\">typeof</span> s2 <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'undefined'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> arr2<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> arr1<span class=\\"token punctuation\\">.</span>length\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>s1 <span class=\\"token operator\\">===</span> s2<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">continue</span>\\n\\n    <span class=\\"token keyword\\">return</span> s2 <span class=\\"token operator\\">-</span> s1\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// console.log(input2);</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
